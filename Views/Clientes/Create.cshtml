@model hubiso.Models.Cliente

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Cliente</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Cnpj" class="control-label"></label>
                <div class="input-group">
                    <input asp-for="Cnpj" class="form-control" />
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="button" id="btn-buscar-cnpj">Buscar</button>
                    </div>
                </div>
                <span asp-validation-for="Cnpj" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RazaoSocial" class="control-label"></label>
                <input asp-for="RazaoSocial" class="form-control" />
                <span asp-validation-for="RazaoSocial" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NomeFantasia" class="control-label"></label>
                <input asp-for="NomeFantasia" class="form-control" />
                <span asp-validation-for="NomeFantasia" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InscricaoEstadual" class="control-label"></label>
                <input asp-for="InscricaoEstadual" class="form-control" />
                <span asp-validation-for="InscricaoEstadual" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Ativo" /> @Html.DisplayNameFor(model => model.Ativo)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            $('#btn-buscar-cnpj').on('click', async function () {
                const cnpjInput = $('#Cnpj');
                const razaoSocialInput = $('#RazaoSocial');
                const nomeFantasiaInput = $('#NomeFantasia');
                const btnBuscar = $(this);

                const cnpj = cnpjInput.val();
                if (!cnpj) {
                    alert('Por favor, digite um CNPJ.');
                    return;
                }

                btnBuscar.text('Buscando...');
                btnBuscar.prop('disabled', true);

                try {
                    const response = await fetch(`/clientes/consultar-cnpj/${cnpj}`);

                    if (response.ok) {
                        const data = await response.json();
                        // Suporta camelCase (razaoSocial, nomeFantasia) e snake_case (razao_social, nome_fantasia)
                        const razao = data.razaoSocial ?? data.razao_social ?? '';
                        const fantasia = data.nomeFantasia ?? data.nome_fantasia ?? '';

                        if (razao) razaoSocialInput.val(razao);
                        if (fantasia) nomeFantasiaInput.val(fantasia);
                    } else {
                        alert('CNPJ não encontrado ou inválido.');
                    }
                } catch (error) {
                    console.error('Erro ao buscar CNPJ:', error);
                    alert('Ocorreu um erro ao tentar buscar o CNPJ.');
                } finally {
                    btnBuscar.text('Buscar');
                    btnBuscar.prop('disabled', false);
                }
            });
        });
    </script>
}